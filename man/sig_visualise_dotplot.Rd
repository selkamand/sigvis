% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sig_visualise_dotplot.R
\name{sig_visualise_dotplot}
\alias{sig_visualise_dotplot}
\title{Visualise Signature Contributions with a Dot Plot}
\usage{
sig_visualise_dotplot(
  data,
  col_sample = "sample",
  col_contribution = "contribution",
  binwidth = 0.02,
  col_fill = NULL,
  col_colour = NULL,
  binpositions = c("bygroup", "all"),
  palette_fill = NULL,
  palette_colour = NULL,
  sort_by = c("default", "frequency_fill", "frequency_colour", "palette_fill",
    "palette_colour"),
  xlab = NULL,
  ylab = stringy::prettytext(col_contribution),
  show_legend = TRUE,
  legend_title_fill = stringy::prettytext(col_fill),
  legend_title_colour = stringy::prettytext(col_colour),
  ...
)
}
\arguments{
\item{data}{A data frame describing the contributions of one signature across an entire cohort (or set of bootstrapping experiments).}

\item{col_sample}{The name of the column in \code{data} that contains the sample identifiers. Default is \code{"sample"}.}

\item{col_contribution}{The name of the column in \code{data} that contains the contributions (exposures) to plot (unit: proportions of total mutations explained by the signature). Default is \code{"contribution"}.}

\item{binwidth}{The width of the bins used in the dot plot. Default is \code{0.02}.}

\item{col_fill}{Optional. The name of the column in \code{data} that defines the fill colour grouping.}

\item{col_colour}{Optional. The name of the column in \code{data} that defines the colour grouping.}

\item{binpositions}{Positioning method for the bins. Either \code{"bygroup"} or \code{"all"}. Default is \code{"bygroup"}.}

\item{palette_fill}{Optional. A vector of colours for the fill aesthetic.}

\item{palette_colour}{Optional. A vector of colours for the colour aesthetic.}

\item{sort_by}{When \code{col_fill} or \code{col_colour} are supplied, in which order should the different groups be drawn.
Choices are:
\describe{
\item{\strong{"default"}}{Uses the existing levels of \code{col_fill}/\code{col_colour}.}
\item{\strong{"frequency_fill"}}{Renders groups based on how many samples share each fill colour (smallest group on top).}
\item{\strong{"frequency_colour"}}{Renders groups based on how many samples share each colour (smallest group on top).}
\item{\strong{"palette_fill"}}{Renders groups based on the order their fill colour was supplied to \code{palette_fill}.}
\item{\strong{"palette_colour"}}{Renders groups based on the order their colour was supplied to \code{palette_colour}.}
}}

\item{xlab}{Label for the x-axis.}

\item{ylab}{Label for the y-axis. Default is \code{stringy::prettytext(col_contribution)}.}

\item{show_legend}{Logical. If \code{TRUE}, shows the legend. Default is \code{TRUE}.}

\item{legend_title_fill}{Title for the fill legend. Default is \code{stringy::prettytext(col_fill)}.}

\item{legend_title_colour}{Title for the colour legend. Default is \code{stringy::prettytext(col_colour)}.}

\item{...}{
  Arguments passed on to \code{\link[ggplot2:geom_dotplot]{ggplot2::geom_dotplot}}
  \describe{
    \item{\code{mapping}}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}}. If specified and
\code{inherit.aes = TRUE} (the default), it is combined with the default mapping
at the top level of the plot. You must supply \code{mapping} if there is no plot
mapping.}
    \item{\code{position}}{A position adjustment to use on the data for this layer. This
can be used in various ways, including to prevent overplotting and
improving the display. The \code{position} argument accepts the following:
\itemize{
\item The result of calling a position function, such as \code{position_jitter()}.
This method allows for passing extra arguments to the position.
\item A string naming the position adjustment. To give the position as a
string, strip the function name of the \code{position_} prefix. For example,
to use \code{position_jitter()}, give the position as \code{"jitter"}.
\item For more information and other ways to specify the position, see the
\link[ggplot2:layer_positions]{layer position} documentation.
}}
    \item{\code{binaxis}}{The axis to bin along, "x" (default) or "y"}
    \item{\code{method}}{"dotdensity" (default) for dot-density binning, or
"histodot" for fixed bin widths (like stat_bin)}
    \item{\code{stackdir}}{which direction to stack the dots. "up" (default),
"down", "center", "centerwhole" (centered, but with dots aligned)}
    \item{\code{stackratio}}{how close to stack the dots. Default is 1, where dots
just touch. Use smaller values for closer, overlapping dots.}
    \item{\code{dotsize}}{The diameter of the dots relative to \code{binwidth}, default 1.}
    \item{\code{stackgroups}}{should dots be stacked across groups? This has the effect
that \code{position = "stack"} should have, but can't (because this geom has
some odd properties).}
    \item{\code{origin}}{When \code{method} is "histodot", origin of first bin}
    \item{\code{right}}{When \code{method} is "histodot", should intervals be closed
on the right (a, b], or not [a, b)}
    \item{\code{width}}{When \code{binaxis} is "y", the spacing of the dot stacks
for dodging.}
    \item{\code{drop}}{If TRUE, remove all bins with zero counts}
    \item{\code{na.rm}}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}
    \item{\code{show.legend}}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}
    \item{\code{inherit.aes}}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
  }}
}
\value{
A \code{ggplot} object representing the dot plot.
}
\description{
This function creates a dot plot to visualise signature contributions in genomic data.
}
\examples{
data <- example_dotplot_data()
sig_visualise_dotplot(data)

# Example with fill colours
sig_visualise_dotplot(
  data,
  col_fill = "sample_info",
  palette_fill = c("sample_of_interest" = "red", "cancer_type" = "blue", "other" = "grey")
)
}
